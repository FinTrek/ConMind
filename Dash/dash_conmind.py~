import dash
import dash_core_components as dcc
import dash_html_components as html
import plotly.express as px
import pandas as pd
import numpy as np
import plotly.graph_objs as go


level1=[1,2,3,3,4.1,3.9,4.05,3.88]
level2=[0,0.0,.1,-.1,.125,.075,-.125,-.075]
colour_tags = ['Full','Full','Full','Full','Half','Full','Half','Full']

toc = [122323,112739,50323,45908,13404,23545,23024,34234]

df = pd.DataFrame(np.transpose([toc,level1,level2,colour_tags]),index=np.arange(0,8,1),
                  columns=['A','level1','level2','status'])
df['A'] = pd.to_numeric(df['A'])

fig = px.scatter(df, x="level1", y="level2",
             size="A", color="status", hover_name="A",size_max=80)


fig.update_layout(
    xaxis_title="",
    yaxis_title="",
    paper_bgcolor='rgba(0,0,0,0)',
    plot_bgcolor='rgba(0,0,0,0)',
    xaxis=dict(
        autorange=True,
        showgrid=False,
        ticks='',
        showticklabels=False,
    ),
    yaxis=dict(
        autorange=True,
        showgrid=False,
        ticks='',
        showticklabels=False
    ),
)


data = [# Portfolio (inner donut)
        go.Pie(values=[60],
               labels=['Total clicks'],
               domain={'x':[0.2,0.8], 'y':[0.1,0.9]},
               hole=0.6,
               direction='clockwise',
               sort=False,
               marker={'colors':['#1f77b4']}),
        go.Pie(values=[60],
               labels=['Total clicks'],
               domain={'x':[0.2,0.8], 'y':[0.1,0.9]},
               hole=0.65,
               direction='clockwise',
               sort=False,
               marker={'colors':['white']}),
    # Portfolio (inner donut)
        go.Pie(values=[20,40],
               labels=['1 click','Multi click'],
               domain={'x':[0.2,0.8], 'y':[0.1,0.9]},
               hole=0.70,
               direction='clockwise',
               sort=False,
               marker={'colors':['#ffa07a','#ff8072']}),
        # Individual components (outer donut)
        go.Pie(values=[5,15,30,10],
               labels=['Purchase','Experience','Purchase','Experience'],
               domain={'x':[0.1,0.9], 'y':[0,1]},
               hole=0.80,
               direction='clockwise',
               sort=False,
               marker={'colors':['lightseagreen','darkcyan','darkseagreen','darkseagreen']},
               showlegend=False)]
fig1 = go.Figure(data=data)
fig1.update_layout(
    showlegend=False,
    autosize=False,
    width=500,
    height=500,
    title={
        'text': "Clicks",
        'y':0.5,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'},
)





external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = dash.Dash(__name__)
colors = {
    'background': '#ffffff',
    'text': '#7FDBFF'
}


app.layout = html.Div(style={'backgroundColor': colors['background']},children=[
    html.H1(children='Consumer Mindset analytics',style={
            'textAlign': 'center',
###            'color': colors['text']
    }),
#    html.Div(class = "box")
    html.Div([
        html.P('ConMind is a market segmentation tool for retail businesses that uses machine learning techniques on clickstream data to segregate online consumers as goal oriented versus experiential shoppers. It allows businesses to create adaptive web design tailored to increase shopper retention and reduce cart abandonment.'),
    ],style={
        'textAlign': 'center','width': '750px',
    }),

 #   html.Div(children='''
 #       Dash: A web application framework for Python.
 #   '''),
    html.Div(children=[
        dcc.Graph(
            style ={
                'height':350,
                'width':800
            },
            id='example-graph',
            figure=fig,
            config={
		'displayModeBar':False,
            }
        ),
        dcc.Graph(
            style ={
                'height':350,
                'width':350
            },
            id='pie1',
            figure=fig1,
            config={
		'displayModeBar':False,
            }
        ),        
    ], style={'backgroundColor': colors['background'],'width': '60%', 'display': 'inline-block'}),
    

    html.Div([
        html.P('Goal-oriented shoppers desire to purchase what they want quickly and without distraction, whereas experiential customers tend to spend more time, browse a larger variety of items, and enjoy a foraging attitude to shopping. Traditional market segmentation tools rely on demographic or geographic differences, rather than differentiating consumers on their transient behavioural shopping attitudes. This tool identifies and provides an actionable opportunity for retailers to better personalize their web interface based on the consumes transient shopping behaviour and preferences. I plan to employ mixture models and certain unsupervised learning methods to identify these segments.'),
    ],style={
        'textAlign': 'center','width': '750px',
    }),
    

])

if __name__ == '__main__':
    app.run_server(debug=True)
